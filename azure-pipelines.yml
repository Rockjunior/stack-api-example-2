# Azure DevOps Pipeline for STACK API
# This pipeline builds Docker images and deploys to Azure Container Apps

trigger:
  branches:
    include:
      - main
      - master

variables:
  # Azure Configuration
  azureSubscription: 'stack-azure-rm-devops'
  resourceGroup: 'stack-api-rg'
  location: 'uaenorth'
  acrName: 'stackapiregistry1032'
  environmentName: 'stack-api-env'
  acrServiceConnection: 'stack-acr-sc'
  
  # Image names
  webImageName: 'stack-web'
  apiImageName: 'stack-api'
  stackImageName: 'stack-backend'
  # Container App names
  webContainerAppName: 'stack-web'
  apiContainerAppName: 'stack-api'
  stackContainerAppName: 'stack-backend'

stages:
  - stage: Build
    displayName: 'Build and Push Docker Images'
    jobs:
      - job: BuildImages
        displayName: 'Build Docker Images'
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
          - task: Docker@2
            displayName: 'Login to ACR'
            inputs:
              command: login
              containerRegistry: '$(acrServiceConnection)'
          
          - task: Docker@2
            displayName: 'Build Web Image'
            inputs:
              command: build
              dockerfile: 'web/Dockerfile'
              buildContext: '.'
              repository: '$(acrName).azurecr.io/$(webImageName)'
              tags: |
                $(Build.BuildId)
                latest
          
          - task: Docker@2
            displayName: 'Build API Image'
            inputs:
              command: build
              dockerfile: 'stackapi/api/Dockerfile'
              buildContext: 'stackapi/api'
              repository: '$(acrName).azurecr.io/$(apiImageName)'
              tags: |
                $(Build.BuildId)
                latest
          
          - task: Docker@2
            displayName: 'Build STACK Backend Image'
            inputs:
              command: build
              dockerfile: 'stackapi/Dockerfile'
              buildContext: 'stackapi'
              repository: '$(acrName).azurecr.io/$(stackImageName)'
              tags: |
                $(Build.BuildId)
                latest
          
          - task: Docker@2
            displayName: 'Push Web Image'
            inputs:
              command: push
              repository: '$(acrName).azurecr.io/$(webImageName)'
              tags: |
                $(Build.BuildId)
                latest
          
          - task: Docker@2
            displayName: 'Push API Image'
            inputs:
              command: push
              repository: '$(acrName).azurecr.io/$(apiImageName)'
              tags: |
                $(Build.BuildId)
                latest
          
          - task: Docker@2
            displayName: 'Push STACK Backend Image'
            inputs:
              command: push
              repository: '$(acrName).azurecr.io/$(stackImageName)'
              tags: |
                $(Build.BuildId)
                latest

  - stage: Deploy
    displayName: 'Deploy to Azure Container Apps'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployContainers
        displayName: 'Deploy Container Apps'
        environment: 'production'
        pool:
          vmImage: 'ubuntu-latest'
        
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  displayName: 'Ensure Container Apps CLI extension'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az extension add --name containerapp --upgrade
                - task: AzureCLI@2
                  displayName: 'Deploy API Container'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az containerapp update \
                        --name $(apiContainerAppName) \
                        --resource-group $(resourceGroup) \
                        --image $(acrName).azurecr.io/$(apiImageName):$(Build.BuildId)
                
                - task: AzureCLI@2
                  displayName: 'Deploy STACK Backend Container'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az containerapp update \
                        --name $(stackContainerAppName) \
                        --resource-group $(resourceGroup) \
                        --image $(acrName).azurecr.io/$(stackImageName):$(Build.BuildId)
                
                - task: AzureCLI@2
                  displayName: 'Deploy Web Container'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az containerapp update \
                        --name $(webContainerAppName) \
                        --resource-group $(resourceGroup) \
                        --image $(acrName).azurecr.io/$(webImageName):$(Build.BuildId)
                
                - task: AzureCLI@2
                  displayName: 'Get Web App URL'
                  inputs:
                    azureSubscription: '$(azureSubscription)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      WEB_URL=$(az containerapp show \
                        --name $(webContainerAppName) \
                        --resource-group $(resourceGroup) \
                        --query properties.configuration.ingress.fqdn \
                        --output tsv)
                      echo "Application URL: https://$WEB_URL"
